{"mappings":"AAAA,wBAAwB;AACxB,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,MAAM,SAAS,SAAS,aAAa,CAAC;IACtC,MAAM,cAAc,OAAO,gBAAgB,CAAC;IAE5C,IAAI,CAAC,gBAAgB,CAAC,QAAQ;IAE9B,SAAS;QACP,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;QAC5B,SAAS,gBAAgB,CAAC,SAAS;IACrC;IAEA,SAAS;QACP,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAC/B,SAAS,mBAAmB,CAAC,SAAS;IACxC;IAEA,SAAS,YAAY,KAAK;QACxB,MAAM,eAAe;QACrB,SAAS,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,eAAe;IAClE;IAEA,SAAS,yBAAyB,KAAK;QACrC,IAAI,CAAC,aAAa,QAAQ,CAAC,MAAM,MAAM,KAAK,CAAC,OAAO,QAAQ,CAAC,MAAM,MAAM,GACvE;IAEJ;IAEA,SAAS;QACP,cAAc,0CAA0C;IAC1D;IAEA,aAAa,gBAAgB,CAAC,SAAS;IACvC,YAAY,OAAO,CAAC,CAAA,OAAQ,KAAK,gBAAgB,CAAC,SAAS;AAC7D;AAKA,kBAAkB;AAClB,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,yBAAyB,SAAS,cAAc,CAAC;IACvD,MAAM,oBAAoB,SAAS,aAAa,CAAC;IACjD,MAAM,eAAe,SAAS,aAAa,CAAC;IAE1C,2CAA2C;IAC3C,uBAAuB,gBAAgB,CAAC,SAAS,SAAU,CAAC;QAC1D,EAAE,eAAe,IAAI,iCAAiC;QAEtD,oDAAoD;QACpD,aAAa,SAAS,CAAC,MAAM,CAAC;QAC9B,kBAAkB,SAAS,CAAC,MAAM,CAAC;QAEnC,iCAAiC;QACjC,MAAM,aAAa,CAAC,aAAa,SAAS,CAAC,QAAQ,CAAC;QACpD,uBAAuB,YAAY,CAAC,iBAAiB;IACvD;IAEA,uCAAuC;IACvC,SAAS,gBAAgB,CAAC,SAAS,SAAU,CAAC;QAC5C,IAAI,CAAC,kBAAkB,QAAQ,CAAC,EAAE,MAAM,GAAG;YACzC,aAAa,SAAS,CAAC,GAAG,CAAC;YAC3B,uBAAuB,YAAY,CAAC,iBAAiB;YACrD,kBAAkB,SAAS,CAAC,MAAM,CAAC;QACrC;IACF;IAEF,4BAA4B;IAC5B,MAAM,gBAAgB,SAAS,gBAAgB,CAAC;IAChD,cAAc,OAAO,CAAC,CAAA;QACpB,KAAK,gBAAgB,CAAC,SAAS;YAC7B,MAAM,mBAAmB,IAAI,CAAC,aAAa,CAAC,QAAQ,WAAW;YAC/D,uBAAuB,aAAa,CAAC,QAAQ,WAAW,GAAG;YAE3D,qCAAqC;YACrC,aAAa,SAAS,CAAC,GAAG,CAAC;YAC3B,uBAAuB,YAAY,CAAC,iBAAiB;YACrD,kBAAkB,SAAS,CAAC,MAAM,CAAC;QACrC;IACF;AACF,IAGA,yDAAyD;CACzD,0DAA0D;CAE1D,uDAAuD;CACvD,mCAAmC;CACnC,0CAA0C;CAC1C,oCAAoC;CACpC,+CAA+C;CAC/C,+EAA+E;CAC/E,2CAA2C;CAC3C,oDAAoD;CACpD,kCAAkC;CAClC,yCAAyC;CACzC,uDAAuD;CACvD,8BAA8B;CAC9B,iDAAiD;CACjD,YAAY;CACZ,iBAAiB;CACjB,2EAA2E;CAC3E,UAAU;CACV,QAAQ;CACR,OAAO;CACP,mHAAmH;CACnH,wBAAwB;CACxB,MAAM","sources":["src/js/header.js"],"sourcesContent":["// header hiding/showing\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const burgerButton = document.querySelector(\".header-burger-button\");\n  const header = document.querySelector(\".header\");\n  const headerLinks = header.querySelectorAll(\"a\");\n\n  if (!burgerButton || !header) return;\n\n  function openModal() {\n    document.body.classList.add(\"modal-open\");\n    document.addEventListener(\"click\", closeModalOnOutsideClick);\n  }\n\n  function closeModal() {\n    document.body.classList.remove(\"modal-open\");\n    document.removeEventListener(\"click\", closeModalOnOutsideClick);\n  }\n\n  function toggleModal(event) {\n    event.stopPropagation();\n    document.body.classList.contains(\"modal-open\") ? closeModal() : openModal();\n  }\n\n  function closeModalOnOutsideClick(event) {\n    if (!burgerButton.contains(event.target) && !header.contains(event.target)) {\n      closeModal();\n    }\n  }\n\n  function closeModalOnLinkClick() {\n    closeModal(); // Close modal when a menu link is clicked\n  }\n\n  burgerButton.addEventListener(\"click\", toggleModal);\n  headerLinks.forEach(link => link.addEventListener(\"click\", closeModalOnLinkClick));\n});\n\n\n\n\n// language change\ndocument.addEventListener('DOMContentLoaded', function () {\n  const languageDropdownButton = document.getElementById('languageDropdownBtn');\n  const languageContainer = document.querySelector('.language-dropdown');\n  const languageList = document.querySelector('.language-list');\n\n    // Toggle dropdown when clicking the button\n    languageDropdownButton.addEventListener('click', function (e) {\n      e.stopPropagation(); // Prevent event from bubbling up\n\n      //hiding language list and solving acesibility isues\n      languageList.classList.toggle('visually-hidden');\n      languageContainer.classList.toggle('language-dropdown--open');\n\n      // Update aria-expanded attribute\n      const isExpanded = !languageList.classList.contains('visually-hidden');\n      languageDropdownButton.setAttribute('aria-expanded', isExpanded);\n    });\n\n    // Close dropdown when clicking outside\n    document.addEventListener('click', function (e) {\n      if (!languageContainer.contains(e.target)) {\n        languageList.classList.add('visually-hidden');\n        languageDropdownButton.setAttribute('aria-expanded', 'false');\n        languageContainer.classList.remove('language-dropdown--open');\n      }\n    });\n\n  // Handle language selection\n  const languageItems = document.querySelectorAll('.language-list-item');\n  languageItems.forEach(item => {\n    item.addEventListener('click', function () {\n      const selectedLanguage = this.querySelector('span').textContent;\n      languageDropdownButton.querySelector('span').textContent = selectedLanguage;\n\n      // Hide language list after selection\n      languageList.classList.add('visually-hidden');\n      languageDropdownButton.setAttribute('aria-expanded', 'false');\n      languageContainer.classList.remove('language-dropdown--open');\n    });\n  });\n});\n\n\n// const targetInput = document.getElementById('target');\n// const languageUrl = document.getElementById('changer');\n\n// lang_select.addEventListener('change', function () {\n//   let select_value = this.value;\n//   let target_value = targetInput.value;\n//   let xhr = new XMLHttpRequest();\n//   xhr.open('POST', languageUrl.value, true);\n//   xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n//   xhr.onreadystatechange = function () {\n//     if (xhr.readyState === XMLHttpRequest.DONE) {\n//       if (xhr.status === 200) {\n//         console.log(xhr.responseText);\n//         let response = JSON.parse(xhr.responseText);\n//         if (response.url) {\n//           window.location.href = response.url;\n//         }\n//       } else {\n//         console.error('AJAX request failed with status: ' + xhr.status);\n//       }\n//     }\n//   };\n//   let formData = 'language=' + encodeURIComponent(select_value) + '&target=' + encodeURIComponent(target_value);\n//   xhr.send(formData);\n// });\n"],"names":[],"version":3,"file":"index.7afa73b1.js.map","sourceRoot":"/__parcel_source_root/"}