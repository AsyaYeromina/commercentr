{"mappings":"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","sources":["<anon>","src/js/main.js"],"sourcesContent":["// #region ========== Inputs data validation and sending ========\n// Find inputs in form\nconst form = document.getElementById(\"form\");\nconst username = document.getElementById(\"name\");\nconst email = document.getElementById(\"email\");\nconst phone = document.getElementById(\"phone\");\nconst agree = document.getElementById(\"agree\");\nconst select = document.getElementById(\"select\");\n// Adjust minimal length for name validation if needed\nconst MINIMAL_NAME_LENGTH = 3;\n// Form Submission Handler\nform.addEventListener(\"submit\", async (event)=>{\n    event.preventDefault();\n    // Validate inputs\n    if (!validateTextInputs()) return;\n    // Validate Select and Checkbox\n    if (!validateSelect(select) || !validateCheckbox(agree)) return;\n    // Prepare form data\n    const formData = {\n        username: username.value.trim(),\n        phone: phone.value.trim(),\n        email: email.value.trim(),\n        title: select.value\n    };\n// Submit form data via AJAX\n// try {\n//   const response = await fetch(\"https://api-endpoint...\", {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(formData),\n//   });\n//   if (!response.ok) {\n//     throw new Error(`Error: ${response.statusText}`);\n//   }\n//   const result = await response.json();\n//   console.log(\"Success:\", result);\n//   alert(\"Дякуємо за звернення, ми вас сповістимо на вказаний e-mail!\");\n//   form.reset();\n// } catch (error) {\n//   console.error(\"Error submitting form:\", error);\n//   alert(\"Сталась помилка при відправленні форми. Спробуйте ще раз\");\n// }\n});\n// Validate All Inputs\nconst validateTextInputs = ()=>{\n    const isUsernameValid = validateField(username, isValidName, MINIMAL_NAME_LENGTH);\n    const isEmailValid = validateField(email, isValidEmail);\n    const isPhoneValid = validateField(phone, isValidPhone);\n    return isUsernameValid && isEmailValid && isPhoneValid;\n};\n// Validate Select\nconst validateSelect = (select)=>{\n    if (select.value === select.options[0].value) {\n        setError(select);\n        return false;\n    }\n    setSuccess(select);\n    return true;\n};\n// Validate Checkbox\nconst validateCheckbox = (checkbox)=>{\n    if (!checkbox.checkValidity()) {\n        checkbox.reportValidity();\n        return false;\n    }\n    return true;\n};\n// Validate Each Field\nconst validateField = (input, validationFn, minLength = 0)=>{\n    const value = input.value.trim();\n    if (value === \"\" || value.length < minLength) {\n        setError(input);\n        return false;\n    }\n    if (!validationFn(value)) {\n        setError(input);\n        return false;\n    }\n    setSuccess(input);\n    return true;\n};\nconst isValidEmail = (email)=>/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email.trim());\nconst isValidPhone = (phone)=>/^(\\+?\\d{1,3})?[\\s-]?(\\d{3})[\\s-]?(\\d{3})[\\s-]?(\\d{2})[\\s-]?(\\d{2})$/.test(phone.trim());\nconst isValidName = (name)=>/^[a-zA-Zа-яА-ЯіІїЇєЄ' ]+$/u.test(name.trim());\n// Error Styles adding\nconst setError = (element)=>element.parentElement?.classList.add(\"form-group--error\");\nconst setSuccess = (element)=>element.parentElement?.classList.remove(\"form-group--error\");\n// #endregion\n// #region ================== Customize Select =========================\ndocument.querySelectorAll(\"select\").forEach((select)=>{\n    const numberOfOptions = select.options.length;\n    select.classList.add(\"select-hidden\");\n    // Wrap select in a div\n    const selectWrapper = document.createElement(\"div\");\n    selectWrapper.classList.add(\"select\");\n    select.parentNode.insertBefore(selectWrapper, select);\n    selectWrapper.appendChild(select);\n    // Add a styled dropdown button (show placeholder initially)\n    const styledSelect = document.createElement(\"div\");\n    styledSelect.classList.add(\"select-styled\");\n    styledSelect.textContent = select.options[0].textContent; // Placeholder text\n    styledSelect.setAttribute(\"data-placeholder\", select.options[0].textContent);\n    selectWrapper.appendChild(styledSelect);\n    // Create the dropdown options list\n    const list = document.createElement(\"ul\");\n    list.classList.add(\"select-options\");\n    selectWrapper.appendChild(list);\n    for(let i = 0; i < numberOfOptions; i++){\n        if (i === 0) continue; // Skip first (placeholder) option\n        const listItem = document.createElement(\"li\");\n        listItem.textContent = select.options[i].textContent;\n        listItem.setAttribute(\"rel\", select.options[i].value);\n        list.appendChild(listItem);\n    }\n    const listItems = list.querySelectorAll(\"li\");\n    let currentIndex = -1;\n    // Event listener to show/hide the dropdown\n    styledSelect.addEventListener(\"click\", (e)=>{\n        e.stopPropagation();\n        // Close other open dropdowns\n        document.querySelectorAll(\".select-styled.active\").forEach((activeSelect)=>{\n            if (activeSelect !== styledSelect) {\n                activeSelect.classList.remove(\"active\");\n                activeSelect.nextElementSibling.style.display = \"none\";\n            }\n        });\n        styledSelect.classList.toggle(\"active\");\n        list.style.display = styledSelect.classList.contains(\"active\") ? \"block\" : \"none\";\n        // Reset keyboard navigation index\n        currentIndex = -1;\n    });\n    // Handle option selection\n    listItems.forEach((item, index)=>{\n        item.addEventListener(\"click\", (e)=>{\n            e.stopPropagation();\n            styledSelect.textContent = item.textContent;\n            select.value = item.getAttribute(\"rel\");\n            list.querySelectorAll(\".is-selected\").forEach((selectedItem)=>{\n                selectedItem.classList.remove(\"is-selected\");\n            });\n            item.classList.add(\"is-selected\");\n            styledSelect.classList.remove(\"active\");\n            list.style.display = \"none\";\n        });\n        item.addEventListener(\"mouseenter\", ()=>{\n            currentIndex = index;\n            updateSelection();\n        });\n    });\n    // Close dropdown when clicking outside\n    document.addEventListener(\"click\", ()=>{\n        styledSelect.classList.remove(\"active\");\n        list.style.display = \"none\";\n    });\n    // Keyboard navigation (skip placeholder)\n    styledSelect.addEventListener(\"keydown\", (e)=>{\n        switch(e.key){\n            case \"ArrowDown\":\n                e.preventDefault();\n                if (currentIndex < listItems.length - 1) currentIndex++;\n                else currentIndex = 0;\n                updateSelection();\n                break;\n            case \"ArrowUp\":\n                e.preventDefault();\n                if (currentIndex > 0) currentIndex--;\n                else currentIndex = listItems.length - 1;\n                updateSelection();\n                break;\n            case \"Enter\":\n                e.preventDefault();\n                if (currentIndex > -1) listItems[currentIndex].click();\n                break;\n            case \"Escape\":\n                styledSelect.classList.remove(\"active\");\n                list.style.display = \"none\";\n                break;\n        }\n    });\n    // Allow keyboard focus on the styled select\n    styledSelect.setAttribute(\"tabindex\", \"0\");\n    function updateSelection() {\n        listItems.forEach((item)=>item.classList.remove(\"is-selected\"));\n        if (currentIndex > -1) {\n            listItems[currentIndex].classList.add(\"is-selected\");\n            styledSelect.textContent = listItems[currentIndex].textContent;\n            select.value = listItems[currentIndex].getAttribute(\"rel\");\n        }\n    }\n});\n// #endregion\n// #region ============== Add Asterisk (*) to Required Field Labels ============\ndocument.querySelectorAll(\"input[required], select[required]\").forEach((field)=>{\n    const label = document.querySelector(`label[for=\"${field.id}\"]`);\n    if (label) label.innerHTML += \" <span>*</span>\";\n}); // #endregion\n\n//# sourceMappingURL=index.7c26e42c.js.map\n","// #region ========== Inputs data validation and sending ========\n\n// Find inputs in form\nconst form = document.getElementById(\"form\");\nconst username = document.getElementById(\"name\");\nconst email = document.getElementById(\"email\");\nconst phone = document.getElementById(\"phone\");\nconst agree = document.getElementById(\"agree\");\nconst select = document.getElementById(\"select\");\n\n// Adjust minimal length for name validation if needed\nconst MINIMAL_NAME_LENGTH = 3;\n\n// Form Submission Handler\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n\n  // Validate inputs\n  if (!validateTextInputs()) return;\n\n  // Validate Select and Checkbox\n  if (!validateSelect(select) || !validateCheckbox(agree)) return;\n\n  // Prepare form data\n  const formData = {\n    username: username.value.trim(),\n    phone: phone.value.trim(),\n    email: email.value.trim(),\n    title: select.value,\n  };\n\n  // Submit form data via AJAX\n  // try {\n  //   const response = await fetch(\"https://api-endpoint...\", {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify(formData),\n  //   });\n\n  //   if (!response.ok) {\n  //     throw new Error(`Error: ${response.statusText}`);\n  //   }\n\n  //   const result = await response.json();\n  //   console.log(\"Success:\", result);\n\n  //   alert(\"Дякуємо за звернення, ми вас сповістимо на вказаний e-mail!\");\n  //   form.reset();\n  // } catch (error) {\n  //   console.error(\"Error submitting form:\", error);\n  //   alert(\"Сталась помилка при відправленні форми. Спробуйте ще раз\");\n  // }\n});\n\n// Validate All Inputs\nconst validateTextInputs = () => {\n  const isUsernameValid = validateField(\n    username,\n    isValidName,\n    MINIMAL_NAME_LENGTH\n  );\n  const isEmailValid = validateField(email, isValidEmail);\n  const isPhoneValid = validateField(phone, isValidPhone);\n\n  return isUsernameValid && isEmailValid && isPhoneValid;\n};\n\n// Validate Select\nconst validateSelect = (select) => {\n  if (select.value === select.options[0].value) {\n    setError(select);\n    return false;\n  }\n  setSuccess(select);\n  return true;\n};\n\n// Validate Checkbox\nconst validateCheckbox = (checkbox) => {\n  if (!checkbox.checkValidity()) {\n    checkbox.reportValidity();\n    return false;\n  }\n  return true;\n};\n\n// Validate Each Field\nconst validateField = (input, validationFn, minLength = 0) => {\n  const value = input.value.trim();\n\n  if (value === \"\" || value.length < minLength) {\n    setError(input);\n    return false;\n  }\n\n  if (!validationFn(value)) {\n    setError(input);\n    return false;\n  }\n\n  setSuccess(input);\n  return true;\n};\n\nconst isValidEmail = (email) =>\n  /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email.trim());\n\nconst isValidPhone = (phone) =>\n  /^(\\+?\\d{1,3})?[\\s-]?(\\d{3})[\\s-]?(\\d{3})[\\s-]?(\\d{2})[\\s-]?(\\d{2})$/.test(\n    phone.trim()\n  );\n\nconst isValidName = (name) => /^[a-zA-Zа-яА-ЯіІїЇєЄ' ]+$/u.test(name.trim());\n\n// Error Styles adding\nconst setError = (element) =>\n  element.parentElement?.classList.add(\"form-group--error\");\nconst setSuccess = (element) =>\n  element.parentElement?.classList.remove(\"form-group--error\");\n\n// #endregion\n\n// #region ================== Customize Select =========================\ndocument.querySelectorAll(\"select\").forEach((select) => {\n  const numberOfOptions = select.options.length;\n\n  select.classList.add(\"select-hidden\");\n\n  // Wrap select in a div\n  const selectWrapper = document.createElement(\"div\");\n  selectWrapper.classList.add(\"select\");\n  select.parentNode.insertBefore(selectWrapper, select);\n  selectWrapper.appendChild(select);\n\n  // Add a styled dropdown button (show placeholder initially)\n  const styledSelect = document.createElement(\"div\");\n  styledSelect.classList.add(\"select-styled\");\n  styledSelect.textContent = select.options[0].textContent; // Placeholder text\n  styledSelect.setAttribute(\"data-placeholder\", select.options[0].textContent);\n  selectWrapper.appendChild(styledSelect);\n\n  // Create the dropdown options list\n  const list = document.createElement(\"ul\");\n  list.classList.add(\"select-options\");\n  selectWrapper.appendChild(list);\n\n  for (let i = 0; i < numberOfOptions; i++) {\n    if (i === 0) continue; // Skip first (placeholder) option\n\n    const listItem = document.createElement(\"li\");\n    listItem.textContent = select.options[i].textContent;\n    listItem.setAttribute(\"rel\", select.options[i].value);\n    list.appendChild(listItem);\n  }\n\n  const listItems = list.querySelectorAll(\"li\");\n  let currentIndex = -1;\n\n  // Event listener to show/hide the dropdown\n  styledSelect.addEventListener(\"click\", (e) => {\n    e.stopPropagation();\n\n    // Close other open dropdowns\n    document\n      .querySelectorAll(\".select-styled.active\")\n      .forEach((activeSelect) => {\n        if (activeSelect !== styledSelect) {\n          activeSelect.classList.remove(\"active\");\n          activeSelect.nextElementSibling.style.display = \"none\";\n        }\n      });\n\n    styledSelect.classList.toggle(\"active\");\n    list.style.display = styledSelect.classList.contains(\"active\")\n      ? \"block\"\n      : \"none\";\n\n    // Reset keyboard navigation index\n    currentIndex = -1;\n  });\n\n  // Handle option selection\n  listItems.forEach((item, index) => {\n    item.addEventListener(\"click\", (e) => {\n      e.stopPropagation();\n      styledSelect.textContent = item.textContent;\n      select.value = item.getAttribute(\"rel\");\n\n      list.querySelectorAll(\".is-selected\").forEach((selectedItem) => {\n        selectedItem.classList.remove(\"is-selected\");\n      });\n\n      item.classList.add(\"is-selected\");\n\n      styledSelect.classList.remove(\"active\");\n      list.style.display = \"none\";\n    });\n\n    item.addEventListener(\"mouseenter\", () => {\n      currentIndex = index;\n      updateSelection();\n    });\n  });\n\n  // Close dropdown when clicking outside\n  document.addEventListener(\"click\", () => {\n    styledSelect.classList.remove(\"active\");\n    list.style.display = \"none\";\n  });\n\n  // Keyboard navigation (skip placeholder)\n  styledSelect.addEventListener(\"keydown\", (e) => {\n    switch (e.key) {\n      case \"ArrowDown\":\n        e.preventDefault();\n        if (currentIndex < listItems.length - 1) {\n          currentIndex++;\n        } else {\n          currentIndex = 0;\n        }\n        updateSelection();\n        break;\n\n      case \"ArrowUp\":\n        e.preventDefault();\n        if (currentIndex > 0) {\n          currentIndex--;\n        } else {\n          currentIndex = listItems.length - 1;\n        }\n        updateSelection();\n        break;\n\n      case \"Enter\":\n        e.preventDefault();\n        if (currentIndex > -1) {\n          listItems[currentIndex].click();\n        }\n        break;\n\n      case \"Escape\":\n        styledSelect.classList.remove(\"active\");\n        list.style.display = \"none\";\n        break;\n    }\n  });\n\n  // Allow keyboard focus on the styled select\n  styledSelect.setAttribute(\"tabindex\", \"0\");\n\n  function updateSelection() {\n    listItems.forEach((item) => item.classList.remove(\"is-selected\"));\n    if (currentIndex > -1) {\n      listItems[currentIndex].classList.add(\"is-selected\");\n      styledSelect.textContent = listItems[currentIndex].textContent;\n      select.value = listItems[currentIndex].getAttribute(\"rel\");\n    }\n  }\n});\n\n// #endregion\n\n// #region ============== Add Asterisk (*) to Required Field Labels ============\ndocument\n  .querySelectorAll(\"input[required], select[required]\")\n  .forEach((field) => {\n    const label = document.querySelector(`label[for=\"${field.id}\"]`);\n    if (label) label.innerHTML += \" <span>*</span>\";\n  });\n\n// #endregion\n"],"names":["form","document","getElementById","username","email","phone","agree","select","addEventListener","event","preventDefault","validateTextInputs","validateSelect","validateCheckbox","value","trim","isUsernameValid","validateField","isValidName","isEmailValid","isValidEmail","isPhoneValid","isValidPhone","options","setError","setSuccess","checkbox","checkValidity","reportValidity","input","validationFn","minLength","length","test","name","element","parentElement","classList","add","remove","querySelectorAll","forEach","numberOfOptions","selectWrapper","createElement","parentNode","insertBefore","appendChild","styledSelect","textContent","setAttribute","list","i","listItem","listItems","currentIndex","updateSelection","item","getAttribute","e","stopPropagation","activeSelect","nextElementSibling","style","display","toggle","contains","index","selectedItem","key","click","field","label","querySelector","id","innerHTML"],"version":3,"file":"index.7c26e42c.js.map"}