{"mappings":"ACCC,CAAA,KAEC,IAAM,EAAW,SAAS,cAAc,CAAC,QACnC,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAQ,SAAS,cAAc,CAAC,SAChC,EAAS,SAAS,cAAc,CAAC,UACjC,EAAO,SAAS,cAAc,CAAC,QAKrC,QAAQ,GAAG,CAAC,QAGZ,EAAK,gBAAgB,CAAC,SAAU,MAAO,IACrC,EAAM,cAAc,GAGf,KAGD,AAAC,EAAe,IAAY,EAAiB,KAIrC,EAAS,KAAK,CAAC,IAAI,GACtB,EAAM,KAAK,CAAC,IAAI,GAChB,EAAM,KAAK,CAAC,IAAI,GAChB,EAAO,KAAK,CAwBvB,GAGA,IAAM,EAAqB,KACzB,IAAM,EAAkB,EACtB,EACA,EAjDwB,GAoDpB,EAAe,EAAc,EAAO,GACpC,EAAe,EAAc,EAAO,GAE1C,OAAO,GAAmB,GAAgB,CAC5C,EAGM,EAAiB,AAAC,GACtB,AAAI,EAAO,KAAK,GAAK,EAAO,OAAO,CAAC,EAAE,CAAC,KAAK,EAC1C,EAAS,GACF,CAAA,IAET,EAAW,GACJ,CAAA,GAIH,EAAmB,AAAC,GACxB,EAAK,EAAS,aAAa,KACzB,EAAS,cAAc,GAChB,CAAA,GAML,EAAgB,CAAC,EAAO,EAAc,EAAY,CAAC,IACvD,IAAM,EAAQ,EAAM,KAAK,CAAC,IAAI,SAE9B,AAAc,KAAV,GAAgB,EAAM,MAAM,CAAG,GAK/B,CAAC,EAAa,IAJhB,EAAS,GACF,CAAA,IAQT,EAAW,GACJ,CAAA,EACT,EAEM,EAAe,AAAC,GACpB,mDAAmD,IAAI,CAAC,EAAM,IAAI,IAE9D,EAAe,AAAC,GACpB,sEAAsE,IAAI,CACxE,EAAM,IAAI,IAGR,EAAc,AAAC,GAAS,6BAA6B,IAAI,CAAC,EAAK,IAAI,IAGnE,EAAW,AAAC,GAChB,EAAQ,aAAa,EAAE,UAAU,IAAI,qBACjC,EAAa,AAAC,GAClB,EAAQ,aAAa,EAAE,UAAU,OAAO,qBAG1C,SACG,gBAAgB,CAAC,qCACjB,OAAO,CAAC,AAAC,IACR,QAAQ,GAAG,CAAC,EAAM,IAAI,EACtB,IAAM,EAAQ,SAAS,aAAa,CAAC,CAAC,WAAW,EAAE,EAAM,EAAE,CAAC,EAAE,CAAC,EAC3D,GAAO,CAAA,EAAM,SAAS,EAAI,iBAA9B,CACF,EACJ,CAAA","sources":["<anon>","src/js/main.js"],"sourcesContent":["//  ========== Inputs data validation and sending ========\n(()=>{\n    // Find inputs in form\n    const username = document.getElementById(\"name\");\n    const email = document.getElementById(\"email\");\n    const phone = document.getElementById(\"phone\");\n    const agree = document.getElementById(\"agree\");\n    const select = document.getElementById(\"select\");\n    const form = document.getElementById(\"form\");\n    // Adjust minimal length for name validation if needed\n    const MINIMAL_NAME_LENGTH = 3;\n    console.log(\"test\");\n    // Form Submission Handler\n    form.addEventListener(\"submit\", async (event)=>{\n        event.preventDefault();\n        // Validate inputs\n        if (!validateTextInputs()) return;\n        // Validate Select and Checkbox\n        if (!validateSelect(select) || !validateCheckbox(agree)) return;\n        // Prepare form data\n        const formData = {\n            username: username.value.trim(),\n            phone: phone.value.trim(),\n            email: email.value.trim(),\n            title: select.value\n        };\n    // Submit form data via AJAX\n    // try {\n    //   const response = await fetch(\"https://api-endpoint...\", {\n    //     method: \"POST\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //     body: JSON.stringify(formData),\n    //   });\n    //   if (!response.ok) {\n    //     throw new Error(`Error: ${response.statusText}`);\n    //   }\n    //   const result = await response.json();\n    //   console.log(\"Success:\", result);\n    //   alert(\"Дякуємо за звернення, ми вас сповістимо на вказаний e-mail!\");\n    //   form.reset();\n    // } catch (error) {\n    //   console.error(\"Error submitting form:\", error);\n    //   alert(\"Сталась помилка при відправленні форми. Спробуйте ще раз\");\n    // }\n    });\n    // Validate All Inputs\n    const validateTextInputs = ()=>{\n        const isUsernameValid = validateField(username, isValidName, MINIMAL_NAME_LENGTH);\n        const isEmailValid = validateField(email, isValidEmail);\n        const isPhoneValid = validateField(phone, isValidPhone);\n        return isUsernameValid && isEmailValid && isPhoneValid;\n    };\n    // Validate Select\n    const validateSelect = (select)=>{\n        if (select.value === select.options[0].value) {\n            setError(select);\n            return false;\n        }\n        setSuccess(select);\n        return true;\n    };\n    // Validate Checkbox\n    const validateCheckbox = (checkbox)=>{\n        if (!checkbox.checkValidity()) {\n            checkbox.reportValidity();\n            return false;\n        }\n        return true;\n    };\n    // Validate Each Field\n    const validateField = (input, validationFn, minLength = 0)=>{\n        const value = input.value.trim();\n        if (value === \"\" || value.length < minLength) {\n            setError(input);\n            return false;\n        }\n        if (!validationFn(value)) {\n            setError(input);\n            return false;\n        }\n        setSuccess(input);\n        return true;\n    };\n    const isValidEmail = (email)=>/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email.trim());\n    const isValidPhone = (phone)=>/^(\\+?\\d{1,3})?[\\s-]?(\\d{3})[\\s-]?(\\d{3})[\\s-]?(\\d{2})[\\s-]?(\\d{2})$/.test(phone.trim());\n    const isValidName = (name)=>/^[a-zA-Zа-яА-ЯіІїЇєЄ' ]+$/u.test(name.trim());\n    // Error Styles adding\n    const setError = (element)=>element.parentElement?.classList.add(\"form-group--error\");\n    const setSuccess = (element)=>element.parentElement?.classList.remove(\"form-group--error\");\n    //  ============== Add Asterisk (*) to Required Field Labels ============\n    document.querySelectorAll(\"input[required], select[required]\").forEach((field)=>{\n        console.log(field.name);\n        const label = document.querySelector(`label[for=\"${field.id}\"]`);\n        if (label) label.innerHTML += \" <span>*</span>\";\n    });\n})();\n\n//# sourceMappingURL=index.7c26e42c.js.map\n","//  ========== Inputs data validation and sending ========\n(() => {\n  // Find inputs in form\n  const username = document.getElementById(\"name\");\n  const email = document.getElementById(\"email\");\n  const phone = document.getElementById(\"phone\");\n  const agree = document.getElementById(\"agree\");\n  const select = document.getElementById(\"select\");\n  const form = document.getElementById(\"form\");\n\n  // Adjust minimal length for name validation if needed\n  const MINIMAL_NAME_LENGTH = 3;\n\n  console.log(\"test\");\n\n  // Form Submission Handler\n  form.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    // Validate inputs\n    if (!validateTextInputs()) return;\n\n    // Validate Select and Checkbox\n    if (!validateSelect(select) || !validateCheckbox(agree)) return;\n\n    // Prepare form data\n    const formData = {\n      username: username.value.trim(),\n      phone: phone.value.trim(),\n      email: email.value.trim(),\n      title: select.value,\n    };\n\n    // Submit form data via AJAX\n    // try {\n    //   const response = await fetch(\"https://api-endpoint...\", {\n    //     method: \"POST\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //     body: JSON.stringify(formData),\n    //   });\n\n    //   if (!response.ok) {\n    //     throw new Error(`Error: ${response.statusText}`);\n    //   }\n\n    //   const result = await response.json();\n    //   console.log(\"Success:\", result);\n\n    //   alert(\"Дякуємо за звернення, ми вас сповістимо на вказаний e-mail!\");\n    //   form.reset();\n    // } catch (error) {\n    //   console.error(\"Error submitting form:\", error);\n    //   alert(\"Сталась помилка при відправленні форми. Спробуйте ще раз\");\n    // }\n  });\n\n  // Validate All Inputs\n  const validateTextInputs = () => {\n    const isUsernameValid = validateField(\n      username,\n      isValidName,\n      MINIMAL_NAME_LENGTH\n    );\n    const isEmailValid = validateField(email, isValidEmail);\n    const isPhoneValid = validateField(phone, isValidPhone);\n\n    return isUsernameValid && isEmailValid && isPhoneValid;\n  };\n\n  // Validate Select\n  const validateSelect = (select) => {\n    if (select.value === select.options[0].value) {\n      setError(select);\n      return false;\n    }\n    setSuccess(select);\n    return true;\n  };\n\n  // Validate Checkbox\n  const validateCheckbox = (checkbox) => {\n    if (!checkbox.checkValidity()) {\n      checkbox.reportValidity();\n      return false;\n    }\n    return true;\n  };\n\n  // Validate Each Field\n  const validateField = (input, validationFn, minLength = 0) => {\n    const value = input.value.trim();\n\n    if (value === \"\" || value.length < minLength) {\n      setError(input);\n      return false;\n    }\n\n    if (!validationFn(value)) {\n      setError(input);\n      return false;\n    }\n\n    setSuccess(input);\n    return true;\n  };\n\n  const isValidEmail = (email) =>\n    /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email.trim());\n\n  const isValidPhone = (phone) =>\n    /^(\\+?\\d{1,3})?[\\s-]?(\\d{3})[\\s-]?(\\d{3})[\\s-]?(\\d{2})[\\s-]?(\\d{2})$/.test(\n      phone.trim()\n    );\n\n  const isValidName = (name) => /^[a-zA-Zа-яА-ЯіІїЇєЄ' ]+$/u.test(name.trim());\n\n  // Error Styles adding\n  const setError = (element) =>\n    element.parentElement?.classList.add(\"form-group--error\");\n  const setSuccess = (element) =>\n    element.parentElement?.classList.remove(\"form-group--error\");\n\n  //  ============== Add Asterisk (*) to Required Field Labels ============\n  document\n    .querySelectorAll(\"input[required], select[required]\")\n    .forEach((field) => {\n      console.log(field.name);\n      const label = document.querySelector(`label[for=\"${field.id}\"]`);\n      if (label) label.innerHTML += \" <span>*</span>\";\n    });\n})();\n"],"names":["username","document","getElementById","email","phone","agree","select","form","console","log","addEventListener","event","preventDefault","validateTextInputs","validateSelect","validateCheckbox","value","trim","isUsernameValid","validateField","isValidName","isEmailValid","isValidEmail","isPhoneValid","isValidPhone","options","setError","setSuccess","checkbox","checkValidity","reportValidity","input","validationFn","minLength","length","test","name","element","parentElement","classList","add","remove","querySelectorAll","forEach","field","label","querySelector","id","innerHTML"],"version":3,"file":"index.7c26e42c.js.map"}