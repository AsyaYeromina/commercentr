{"mappings":"AAAA,kBAAkB;AAClB,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,QAAQ,SAAS,cAAc,CAAC;AAEtC,iBAAiB;AACjB,KAAK,gBAAgB,CAAC,UAAU,CAAA;IAC5B,EAAE,cAAc;IAEhB;AACJ;AAEA,MAAM,WAAW,CAAC,SAAS;IACvB,MAAM,eAAe,QAAQ,aAAa;IAC1C,MAAM,eAAe,aAAa,aAAa,CAAC;IAEhD,aAAa,SAAS,GAAG;IACzB,aAAa,SAAS,CAAC,GAAG,CAAC;IAC3B,aAAa,SAAS,CAAC,MAAM,CAAC;AAClC;AAEA,MAAM,aAAa,CAAA;IACf,MAAM,eAAe,QAAQ,aAAa;IAC1C,MAAM,eAAe,aAAa,aAAa,CAAC;IAEhD,aAAa,SAAS,GAAG;IACzB,aAAa,SAAS,CAAC,GAAG,CAAC;IAC3B,aAAa,SAAS,CAAC,MAAM,CAAC;AAClC;AAEA,MAAM,eAAe,CAAA;IACjB,MAAM,KAAK;IACX,OAAO,GAAG,IAAI,CAAC,OAAO,OAAO,WAAW;AAC5C;AAEA,MAAM,iBAAiB;IACnB,MAAM,gBAAgB,SAAS,KAAK,CAAC,IAAI;IACzC,MAAM,aAAa,MAAM,KAAK,CAAC,IAAI;IACnC,MAAM,gBAAgB,SAAS,KAAK,CAAC,IAAI;IACzC,MAAM,iBAAiB,UAAU,KAAK,CAAC,IAAI;IAE3C,IAAG,kBAAkB,IACjB,SAAS,UAAU;SAEnB,WAAW;IAGf,IAAG,eAAe,IACd,SAAS,OAAO;SACb,IAAI,CAAC,aAAa,aACrB,SAAS,OAAO;SAEhB,WAAW;IAGf,IAAG,kBAAkB,IACjB,SAAS,UAAU;SAChB,IAAI,cAAc,MAAM,GAAG,GAC9B,SAAS,UAAU;SAEnB,WAAW;IAGf,IAAG,mBAAmB,IAClB,SAAS,WAAW;SACjB,IAAI,mBAAmB,eAC1B,SAAS,WAAW;SAEpB,WAAW;AAGnB;AAEA,8CAA8C;AAC9C,SAAS,gBAAgB,CAAC,qCAAqC,OAAO,CAAC,CAAA;IACrE,MAAM,QAAQ,SAAS,aAAa,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;IAC/D,IAAI,OACF,MAAM,SAAS,IAAI;AAEvB","sources":["src/js/input.js"],"sourcesContent":["// Find all inputs\nconst form = document.getElementById('form');\nconst username = document.getElementById('name');\nconst email = document.getElementById('email');\nconst phone = document.getElementById('phone');\n\n// prevent submit\nform.addEventListener('submit', e => {\n    e.preventDefault();\n\n    validateInputs();\n});\n\nconst setError = (element, message) => {\n    const inputControl = element.parentElement;\n    const errorDisplay = inputControl.querySelector('.error');\n\n    errorDisplay.innerText = message;\n    inputControl.classList.add('error');\n    inputControl.classList.remove('success')\n}\n\nconst setSuccess = element => {\n    const inputControl = element.parentElement;\n    const errorDisplay = inputControl.querySelector('.error');\n\n    errorDisplay.innerText = '';\n    inputControl.classList.add('success');\n    inputControl.classList.remove('error');\n};\n\nconst isValidEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst validateInputs = () => {\n    const usernameValue = username.value.trim();\n    const emailValue = email.value.trim();\n    const passwordValue = password.value.trim();\n    const password2Value = password2.value.trim();\n\n    if(usernameValue === '') {\n        setError(username, 'Username is required');\n    } else {\n        setSuccess(username);\n    }\n\n    if(emailValue === '') {\n        setError(email, 'Email is required');\n    } else if (!isValidEmail(emailValue)) {\n        setError(email, 'Provide a valid email address');\n    } else {\n        setSuccess(email);\n    }\n\n    if(passwordValue === '') {\n        setError(password, 'Password is required');\n    } else if (passwordValue.length < 8 ) {\n        setError(password, 'Password must be at least 8 character.')\n    } else {\n        setSuccess(password);\n    }\n\n    if(password2Value === '') {\n        setError(password2, 'Please confirm your password');\n    } else if (password2Value !== passwordValue) {\n        setError(password2, \"Passwords doesn't match\");\n    } else {\n        setSuccess(password2);\n    }\n\n};\n\n// Add * to all laels that has required inputs\ndocument.querySelectorAll(\"input[required], select[required]\").forEach(field => {\n  const label = document.querySelector(`label[for=\"${field.id}\"]`);\n  if (label) {\n    label.innerHTML += ' <span>*</span>';\n  }\n});\n"],"names":[],"version":3,"file":"index.4fe4e4d1.js.map","sourceRoot":"/__parcel_source_root/"}