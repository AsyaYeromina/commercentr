{"mappings":"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","sources":["<anon>","src/js/formSelect.js"],"sourcesContent":["document.querySelectorAll('select').forEach((select)=>{\n    const numberOfOptions = select.options.length;\n    select.classList.add('select-hidden');\n    // Wrap select in a div\n    const selectWrapper = document.createElement('div');\n    selectWrapper.classList.add('select');\n    select.parentNode.insertBefore(selectWrapper, select);\n    selectWrapper.appendChild(select);\n    // Add a styled dropdown button (show placeholder initially)\n    const styledSelect = document.createElement('div');\n    styledSelect.classList.add('select-styled');\n    styledSelect.textContent = select.options[0].textContent; // Placeholder text\n    styledSelect.setAttribute('data-placeholder', select.options[0].textContent);\n    selectWrapper.appendChild(styledSelect);\n    // Create the dropdown options list\n    const list = document.createElement('ul');\n    list.classList.add('select-options');\n    selectWrapper.appendChild(list);\n    for(let i = 0; i < numberOfOptions; i++){\n        if (i === 0) continue; // Skip placeholder option\n        const listItem = document.createElement('li');\n        listItem.textContent = select.options[i].textContent;\n        listItem.setAttribute('rel', select.options[i].value);\n        list.appendChild(listItem);\n    }\n    const listItems = list.querySelectorAll('li');\n    let currentIndex = -1;\n    // Event listener to show/hide the dropdown\n    styledSelect.addEventListener('click', (e)=>{\n        e.stopPropagation();\n        // Close other open dropdowns\n        document.querySelectorAll('.select-styled.active').forEach((activeSelect)=>{\n            if (activeSelect !== styledSelect) {\n                activeSelect.classList.remove('active');\n                activeSelect.nextElementSibling.style.display = 'none';\n            }\n        });\n        styledSelect.classList.toggle('active');\n        list.style.display = styledSelect.classList.contains('active') ? 'block' : 'none';\n        // Reset keyboard navigation index\n        currentIndex = -1;\n    });\n    // Handle option selection\n    listItems.forEach((item, index)=>{\n        item.addEventListener('click', (e)=>{\n            e.stopPropagation();\n            styledSelect.textContent = item.textContent;\n            select.value = item.getAttribute('rel');\n            list.querySelectorAll('.is-selected').forEach((selectedItem)=>{\n                selectedItem.classList.remove('is-selected');\n            });\n            item.classList.add('is-selected');\n            styledSelect.classList.remove('active');\n            list.style.display = 'none';\n        });\n        item.addEventListener('mouseenter', ()=>{\n            currentIndex = index;\n            updateSelection();\n        });\n    });\n    // Close dropdown when clicking outside\n    document.addEventListener('click', ()=>{\n        styledSelect.classList.remove('active');\n        list.style.display = 'none';\n    });\n    // Keyboard navigation (skip placeholder)\n    styledSelect.addEventListener('keydown', (e)=>{\n        switch(e.key){\n            case 'ArrowDown':\n                e.preventDefault();\n                if (currentIndex < listItems.length - 1) currentIndex++;\n                else currentIndex = 0;\n                updateSelection();\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                if (currentIndex > 0) currentIndex--;\n                else currentIndex = listItems.length - 1;\n                updateSelection();\n                break;\n            case 'Enter':\n                e.preventDefault();\n                if (currentIndex > -1) listItems[currentIndex].click();\n                break;\n            case 'Escape':\n                styledSelect.classList.remove('active');\n                list.style.display = 'none';\n                break;\n        }\n    });\n    // Allow keyboard focus on the styled select\n    styledSelect.setAttribute('tabindex', '0');\n    function updateSelection() {\n        listItems.forEach((item)=>item.classList.remove('is-selected'));\n        if (currentIndex > -1) {\n            listItems[currentIndex].classList.add('is-selected');\n            styledSelect.textContent = listItems[currentIndex].textContent;\n            select.value = listItems[currentIndex].getAttribute('rel');\n        }\n    }\n});\n\n//# sourceMappingURL=index.d240914d.js.map\n","document.querySelectorAll('select').forEach(select => {\n  const numberOfOptions = select.options.length;\n\n  select.classList.add('select-hidden');\n\n  // Wrap select in a div\n  const selectWrapper = document.createElement('div');\n  selectWrapper.classList.add('select');\n  select.parentNode.insertBefore(selectWrapper, select);\n  selectWrapper.appendChild(select);\n\n  // Add a styled dropdown button (show placeholder initially)\n  const styledSelect = document.createElement('div');\n  styledSelect.classList.add('select-styled');\n  styledSelect.textContent = select.options[0].textContent;  // Placeholder text\n  styledSelect.setAttribute('data-placeholder', select.options[0].textContent);\n  selectWrapper.appendChild(styledSelect);\n\n  // Create the dropdown options list\n  const list = document.createElement('ul');\n  list.classList.add('select-options');\n  selectWrapper.appendChild(list);\n\n  for (let i = 0; i < numberOfOptions; i++) {\n    if (i === 0) continue; // Skip placeholder option\n\n    const listItem = document.createElement('li');\n    listItem.textContent = select.options[i].textContent;\n    listItem.setAttribute('rel', select.options[i].value);\n    list.appendChild(listItem);\n  }\n\n  const listItems = list.querySelectorAll('li');\n  let currentIndex = -1;\n\n  // Event listener to show/hide the dropdown\n  styledSelect.addEventListener('click', (e) => {\n    e.stopPropagation();\n\n    // Close other open dropdowns\n    document.querySelectorAll('.select-styled.active').forEach(activeSelect => {\n      if (activeSelect !== styledSelect) {\n        activeSelect.classList.remove('active');\n        activeSelect.nextElementSibling.style.display = 'none';\n      }\n    });\n\n    styledSelect.classList.toggle('active');\n    list.style.display = styledSelect.classList.contains('active') ? 'block' : 'none';\n\n    // Reset keyboard navigation index\n    currentIndex = -1;\n  });\n\n  // Handle option selection\n  listItems.forEach((item, index) => {\n    item.addEventListener('click', (e) => {\n      e.stopPropagation();\n      styledSelect.textContent = item.textContent;\n      select.value = item.getAttribute('rel');\n\n      list.querySelectorAll('.is-selected').forEach(selectedItem => {\n        selectedItem.classList.remove('is-selected');\n      });\n\n      item.classList.add('is-selected');\n\n      styledSelect.classList.remove('active');\n      list.style.display = 'none';\n    });\n\n    item.addEventListener('mouseenter', () => {\n      currentIndex = index;\n      updateSelection();\n    });\n  });\n\n  // Close dropdown when clicking outside\n  document.addEventListener('click', () => {\n    styledSelect.classList.remove('active');\n    list.style.display = 'none';\n  });\n\n  // Keyboard navigation (skip placeholder)\n  styledSelect.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        if (currentIndex < listItems.length - 1) {\n          currentIndex++;\n        } else {\n          currentIndex = 0;\n        }\n        updateSelection();\n        break;\n\n      case 'ArrowUp':\n        e.preventDefault();\n        if (currentIndex > 0) {\n          currentIndex--;\n        } else {\n          currentIndex = listItems.length - 1;\n        }\n        updateSelection();\n        break;\n\n      case 'Enter':\n        e.preventDefault();\n        if (currentIndex > -1) {\n          listItems[currentIndex].click();\n        }\n        break;\n\n      case 'Escape':\n        styledSelect.classList.remove('active');\n        list.style.display = 'none';\n        break;\n    }\n  });\n\n  // Allow keyboard focus on the styled select\n  styledSelect.setAttribute('tabindex', '0');\n\n  function updateSelection() {\n    listItems.forEach(item => item.classList.remove('is-selected'));\n    if (currentIndex > -1) {\n      listItems[currentIndex].classList.add('is-selected');\n      styledSelect.textContent = listItems[currentIndex].textContent;\n      select.value = listItems[currentIndex].getAttribute('rel');\n    }\n  }\n});\n"],"names":["document","querySelectorAll","forEach","select","numberOfOptions","options","length","classList","add","selectWrapper","createElement","parentNode","insertBefore","appendChild","styledSelect","textContent","setAttribute","list","i","listItem","value","listItems","currentIndex","updateSelection","item","remove","getAttribute","addEventListener","e","stopPropagation","activeSelect","nextElementSibling","style","display","toggle","contains","index","selectedItem","key","preventDefault","click"],"version":3,"file":"index.d240914d.js.map"}